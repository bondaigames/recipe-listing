{"version":3,"sources":["components/Navigation/Navigation.js","components/Footer/Footer.js","components/UI/Input/Input.js","axios/recipes/axios-recipes.js","components/UI/Spinner/Spinner.js","hoc/Aux/Aux.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","hoc/withErrorHandler/withErrorHandler.js","containers/CreateNewRecipe/CreateNewRecipe.js","containers/Categories/CreateNewCategory/CreateNewCategory.js","containers/RecipeListing/RecipeListing.js","App.js","store/reducer.js","serviceWorker.js","index.js","components/UI/Input/Input.module.css","components/UI/Spinner/Spinner.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css"],"names":["navigation","props","Navbar","bg","expand","Brand","className","href","Toggle","aria-controls","Collapse","id","Nav","to","footer","input","inputElement","inputClasses","classes","InputElement","invalid","shouldValidation","touched","push","Invalid","elementType","join","elementConfig","value","onChange","changed","editor","ClassicEditor","data","options","map","option","key","displayValue","validationError","ValidationError","errorMessage","Input","Label","label","instance","axios","create","baseURL","spinner","Loader","aux","children","backdrop","show","Backdrop","onClick","clicked","Modal","nextProps","nextState","this","Aux","modalClosed","style","transform","opacity","Component","withErrorHandler","WrappedComponent","state","error","reqInterceptor","interceptors","request","use","req","setState","resInterceptor","response","res","errorConfirmedHandler","eject","message","_isMount","recipeForm","recipeName","type","placeholder","validation","required","minLength","maxLength","valid","category","ingredients","formIsValid","loading","checkValidity","rules","isValid","trim","length","recipeHandler","event","preventDefault","formData","formElementIndentifier","Date","post","then","history","catch","inputChangedHandler","inputIdentifier","updatedRecipeForm","updatedFormElement","getData","target","get","Object","assign","valueArray","keys","categoryName","fetchedCategories","console","log","err","formElementArray","config","form","onSubmit","formElement","Button","disabled","Spinner","categoryForm","categoryHandler","updatedCategoryForm","RecipeListing","recipes","total","per_page","current_page","updatedRecipes","recipeData","index","items","numberOfPage","Math","ceil","number","Pagination","Item","active","paginationBasic","Table","striped","bordered","hover","App","Container","Navigation","Row","Col","xs","md","path","component","CreateNewRecipe","CreateNewCategory","Footer","initialState","counter","reducer","action","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"2PA6CeA,EAzCI,SAAAC,GACjB,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,OAAO,MACvB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,UAAU,aAAaC,KAAK,SAA1C,sBAGA,kBAACL,EAAA,EAAOM,OAAR,CACEC,gBAAc,mBACdH,UAAU,aAEZ,kBAACJ,EAAA,EAAOQ,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAASN,UAAU,kCAAkCO,GAAG,KAAxD,QAGA,kBAAC,IAAD,CACEP,UAAU,kCACVO,GAAG,wBAFL,uBAMA,kBAAC,IAAD,CACEP,UAAU,kCAEVO,GAAG,sBAHL,qBAOA,kBAAC,IAAD,CACEP,UAAU,kCAEVO,GAAG,mBAHL,sBCtBKC,EARA,WACb,OACE,4BAAQR,UAAU,cAChB,gC,2GCuFSS,EAvFD,SAAAd,GACZ,IAAIe,EAAe,KACbC,EAAe,CAACC,IAAQC,cAM9B,OAJIlB,EAAMmB,SAAWnB,EAAMoB,kBAAoBpB,EAAMqB,SACnDL,EAAaM,KAAKL,IAAQM,SAGpBvB,EAAMwB,aACZ,IAAK,QACHT,EACE,yCACEV,UAAWW,EAAaS,KAAK,MACzBzB,EAAM0B,cAFZ,CAGEC,MAAO3B,EAAM2B,MACbC,SAAU5B,EAAM6B,WAGpB,MACF,IAAK,WACHd,EACE,4CACEV,UAAWW,GACPhB,EAAM0B,cAFZ,CAGEC,MAAO3B,EAAM2B,MACbC,SAAU5B,EAAM6B,WAGpB,MACF,IAAK,WACHd,EACE,kBAAC,IAAD,eACEe,OAAQC,IACR1B,UAAWW,GACPhB,EAAM0B,cAHZ,CAIEM,KAAMhC,EAAM2B,MACZC,SAAU5B,EAAM6B,WAOpB,MACF,IAAK,SACHd,EACE,4BACEV,UAAWW,EACXW,MAAO3B,EAAM2B,MACbC,SAAU5B,EAAM6B,SAEf7B,EAAM0B,cAAcO,QAAQC,KAAI,SAAAC,GAAM,OACrC,4BAAQC,IAAKD,EAAOR,MAAOA,MAAOQ,EAAOR,OACtCQ,EAAOE,kBAKhB,MACF,QACEtB,EACE,yCACEV,UAAWW,GACPhB,EAAM0B,cAFZ,CAGEC,MAAO3B,EAAM2B,MACbC,SAAU5B,EAAM6B,WAMxB,IAAIS,EAAkB,KAOtB,OANItC,EAAMmB,SAAWnB,EAAMqB,UACzBiB,EACE,uBAAGjC,UAAWY,IAAQsB,iBAAkBvC,EAAMwC,eAKhD,yBAAKnC,UAAWY,IAAQwB,OACtB,2BAAOpC,UAAWY,IAAQyB,OAAQ1C,EAAM2C,OACvC5B,EACAuB,I,iBCjFQM,E,OAJEC,EAAMC,OAAO,CAC5BC,QAAS,gD,iBCGIC,EAFC,kBAAM,yBAAK3C,UAAWY,IAAQgC,QAAxB,e,iBCFPC,EAFH,SAAClD,GAAD,OAAWA,EAAMmD,U,iBCSdC,EALE,SAAApD,GAAK,OACpBA,EAAMqD,KACJ,yBAAKhD,UAAWY,IAAQqC,SAAUC,QAASvD,EAAMwD,UAC/C,MCyBSC,E,8LAzBSC,EAAWC,GAC/B,OACED,EAAUL,OAASO,KAAK5D,MAAMqD,MAC9BK,EAAUP,WAAaS,KAAK5D,MAAMmD,W,+BAKpC,OACE,kBAACU,EAAD,KACE,kBAACP,EAAD,CAAUD,KAAMO,KAAK5D,MAAMqD,KAAMG,QAASI,KAAK5D,MAAM8D,cACrD,yBACEzD,UAAWY,IAAQwC,MACnBM,MAAO,CACLC,UAAWJ,KAAK5D,MAAMqD,KAAO,gBAAkB,qBAC/CY,QAASL,KAAK5D,MAAMqD,KAAO,IAAM,MAGlCO,KAAK5D,MAAMmD,e,GAnBFe,aC0CLC,EA3CU,SAACC,EAAkBvB,GAC1C,kNACEwB,MAAQ,CACNC,MAAO,MAFX,EAKEC,eAAiB1B,EAAM2B,aAAaC,QAAQC,KAAI,SAAAC,GAE9C,OADA,EAAKC,SAAS,CAAEN,MAAO,OAChBK,KAPX,EAUEE,eAAiBhC,EAAM2B,aAAaM,SAASJ,KAC3C,SAAAK,GAAG,OAAIA,KACP,SAAAT,GACE,EAAKM,SAAS,CAAEN,MAAOA,OAb7B,EAsBEU,sBAAwB,WACtB,EAAKJ,SAAS,CAAEN,MAAO,QAvB3B,sFAkBIzB,EAAM2B,aAAaC,QAAQQ,MAAMrB,KAAKW,gBACtC1B,EAAM2B,aAAaM,SAASG,MAAMrB,KAAKiB,kBAnB3C,+BA2BI,OACE,kBAAChB,EAAD,KACE,kBAAC,EAAD,CACER,KAAMO,KAAKS,MAAMC,MACjBR,YAAaF,KAAKoB,uBAEjBpB,KAAKS,MAAMC,MAAQV,KAAKS,MAAMC,MAAMY,QAAU,MAEjD,kBAACd,EAAqBR,KAAK5D,YAnCnC,GAAqBkE,c,6jBCoNRC,I,2MAlNbgB,UAAW,E,EACXd,MAAQ,CACNe,WAAY,CACVC,WAAY,CACV7D,YAAa,QACbE,cAAe,CACb4D,KAAM,OACNC,YAAa,4BAEf5D,MAAO,GACP6D,WAAY,CACVC,UAAU,EACVC,UAAW,EACXC,UAAW,IACXnD,aACE,4DAEJoD,OAAO,EACPvE,SAAS,GAEXwE,SAAU,CACRrE,YAAa,SACbE,cAAe,CACbO,QAAS,CAAC,CAAEN,MAAO,KAAMU,aAAc,uBAEzCV,MAAO,GACP6D,WAAY,GACZI,OAAO,GAETE,YAAa,CACXtE,YAAa,WACbE,cAAe,CACb4D,KAAM,WAIR3D,MAAO,GACP6D,WAAY,CACVC,UAAU,GAEZG,OAAO,EACPvE,SAAS,IAGb0E,aAAa,EACbC,SAAS,G,EAwDXC,cAAgB,SAACtE,EAAOuE,GACtB,IAAIC,GAAU,EAUd,OATID,EAAMT,WACRU,EAA2B,KAAjBxE,EAAMyE,QAAiBD,GAE/BD,EAAMR,YACRS,EAAUxE,EAAM0E,QAAUH,EAAMR,WAAaS,GAE3CD,EAAMP,YACRQ,EAAUxE,EAAM0E,QAAUH,EAAMP,WAAaQ,GAExCA,G,EAGTG,cAAgB,SAAAC,GACdA,EAAMC,iBACN,EAAK5B,SAAS,CAAEoB,SAAS,IACzB,IAAMS,EAAW,GAEjB,IAAK,IAAIC,KAA0B,EAAKrC,MAAMe,WAC5CqB,EAASC,GAA0B,EAAKrC,MAAMe,WAC5CsB,GACA/E,MAGJ8E,EAAQ,YAAkB,IAAIE,KAK9B9D,EACG+D,KAAK,gBAAiBH,GACtBI,MAAK,SAAA/B,GACJ,EAAKF,SAAS,CAAEoB,SAAS,IACzB,EAAKhG,MAAM8G,QAAQxF,KAAK,QAEzByF,OAAM,SAAAzC,GACL,EAAKM,SAAS,CAAEoB,SAAS,Q,EAI/BgB,oBAAsB,SAACT,EAAOzE,EAAQmF,GACpC,IAAMC,EAAiB,KAClB,EAAK7C,MAAMe,YAEV+B,EAAkB,KACnBD,EAAkBD,IAEgB,aAAnCE,EAAmB3F,YACrB2F,EAAmBxF,MAAQG,EAAOsF,UAElCD,EAAmBxF,MAAQ4E,EAAMc,OAAO1F,MAE1CwF,EAAmBvB,MAAQ,EAAKK,cAC9BkB,EAAmBxF,MACnBwF,EAAmB3B,YAErB2B,EAAmB9F,SAAU,EAC7B6F,EAAkBD,GAAmBE,EACrC,IAAIpB,GAAc,EAClB,IAAK,IAAIkB,KAAmBC,EAC1BnB,EAAcmB,EAAkBD,GAAiBrB,OAASG,EAE5D,EAAKnB,SAAS,CAAEQ,WAAY8B,EAAmBnB,YAAaA,K,mFApHzC,IAAD,OAClBnC,KAAKuB,UAAW,EAChBtC,EACGyE,IAAI,oBACJT,MAAK,SAAA9B,GACJ,IAAMmC,EAAoBK,OAAOC,OAAO,GAAI,EAAKnD,MAAMe,YAgBjDqC,EAAaF,OAAOG,KAAK3C,EAAI/C,MAAME,KAAI,SAAAE,GAC3C,MAAO,CACLC,aAAc0C,EAAI/C,KAAKI,GAAKuF,aAC5BhG,MAAOS,MAILwF,EAAiB,sBAClBV,EAAiB,SAAjB,uBADkB,YAElBO,IAELI,QAAQC,IAAIF,GAEZV,EAAiB,SAAjB,sBAEIU,EACA,EAAKzC,UACP,EAAKP,SAAS,CACZoB,SAAS,EACTZ,WAAY8B,OAIjBH,OAAM,SAAAgB,GACL,EAAKnD,SAAS,CAAEoB,SAAS,S,6CAK7BpC,KAAKuB,UAAW,I,+BAqER,IAAD,OACD6C,EAAmB,GACzB,IAAK,IAAI5F,KAAOwB,KAAKS,MAAMe,WACzB4C,EAAiB1G,KAAK,CACpBZ,GAAI0B,EACJ6F,OAAQrE,KAAKS,MAAMe,WAAWhD,KAGlC,IAAI8F,EACF,0BAAMC,SAAUvE,KAAK0C,eAClB0B,EAAiB9F,KAAI,SAAAkG,GAAW,OAC/B,kBAAC3F,EAAD,CACEL,IAAKgG,EAAY1H,GACjBc,YAAa4G,EAAYH,OAAOzG,YAChCE,cAAe0G,EAAYH,OAAOvG,cAClCC,MAAOyG,EAAYH,OAAOtG,MAC1BR,SAAUiH,EAAYH,OAAOrC,MAC7BxE,iBAAkBgH,EAAYH,OAAOzC,WACrCnE,QAAS+G,EAAYH,OAAO5G,QAC5BmB,aAAc4F,EAAYH,OAAOzC,WAAWhD,aAC5CX,QAAS,SAAC0E,EAAOzE,GAAR,OACP,EAAKkF,oBAAoBT,EAAOzE,EAAQsG,EAAY1H,UAI1D,kBAAC2H,EAAA,EAAD,CAAQ/C,KAAK,SAASgD,UAAW1E,KAAKS,MAAM0B,aAA5C,WASJ,OAHInC,KAAKS,MAAM2B,UACbkC,EAAO,kBAACK,EAAD,OAGP,6BACE,iDACCL,O,GA7MqBhE,aAmNmBrB,G,qkBC9ElCsB,I,2MApIbE,MAAQ,CACNmE,aAAc,CACZb,aAAc,CACZnG,YAAa,QACbE,cAAe,CACb4D,KAAM,OACNC,YAAa,8BAEf5D,MAAO,GACP6D,WAAY,CACVC,UAAU,EACVC,UAAW,EACXC,UAAW,IACXnD,aACE,8DAEJoD,OAAO,EACPvE,SAAS,IAGb0E,aAAa,EACbC,SAAS,G,EAGXC,cAAgB,SAACtE,EAAOuE,GACtB,IAAIC,GAAU,EAUd,OATID,EAAMT,WACRU,EAA2B,KAAjBxE,EAAMyE,QAAiBD,GAE/BD,EAAMR,YACRS,EAAUxE,EAAM0E,QAAUH,EAAMR,WAAaS,GAE3CD,EAAMP,YACRQ,EAAUxE,EAAM0E,QAAUH,EAAMP,WAAaQ,GAExCA,G,EAGTsC,gBAAkB,SAAAlC,GAChBA,EAAMC,iBACN,EAAK5B,SAAS,CAAEoB,SAAS,IACzB,IAAMS,EAAW,GAEjB,IAAK,IAAIC,KAA0B,EAAKrC,MAAMmE,aAC5C/B,EAASC,GAA0B,EAAKrC,MAAMmE,aAC5C9B,GACA/E,MAEJ8E,EAAQ,YAAkB,IAAIE,KAC9B9D,EACG+D,KAAK,mBAAoBH,GACzBI,MAAK,SAAA/B,GACJ,EAAKF,SAAS,CAAEoB,SAAS,IACzB,EAAKhG,MAAM8G,QAAQxF,KAAK,QAEzByF,OAAM,SAAAzC,GACL,EAAKM,SAAS,CAAEoB,SAAS,Q,EAI/BgB,oBAAsB,SAACT,EAAOzE,EAAQmF,GACpC,IAAMyB,EAAmB,KACpB,EAAKrE,MAAMmE,cAEVrB,EAAkB,KACnBuB,EAAoBzB,IAEc,aAAnCE,EAAmB3F,YACrB2F,EAAmBxF,MAAQG,EAAOsF,UAElCD,EAAmBxF,MAAQ4E,EAAMc,OAAO1F,MAE1CwF,EAAmBvB,MAAQ,EAAKK,cAC9BkB,EAAmBxF,MACnBwF,EAAmB3B,YAErB2B,EAAmB9F,SAAU,EAC7BqH,EAAoBzB,GAAmBE,EACvC,IAAIpB,GAAc,EAClB,IAAK,IAAIkB,KAAmByB,EAC1B3C,EAAc2C,EAAoBzB,GAAiBrB,OAASG,EAE9D,EAAKnB,SAAS,CACZ4D,aAAcE,EACd3C,YAAaA,K,wEAIP,IAAD,OACDiC,EAAmB,GACzB,IAAK,IAAI5F,KAAOwB,KAAKS,MAAMmE,aACzBR,EAAiB1G,KAAK,CACpBZ,GAAI0B,EACJ6F,OAAQrE,KAAKS,MAAMmE,aAAapG,KAIpC,IAAI8F,EACF,0BAAMC,SAAUvE,KAAK6E,iBAClBT,EAAiB9F,KAAI,SAAAkG,GAAW,OAC/B,kBAAC3F,EAAD,CACEL,IAAKgG,EAAY1H,GACjBc,YAAa4G,EAAYH,OAAOzG,YAChCE,cAAe0G,EAAYH,OAAOvG,cAClCC,MAAOyG,EAAYH,OAAOtG,MAC1BR,SAAUiH,EAAYH,OAAOrC,MAC7BxE,iBAAkBgH,EAAYH,OAAOzC,WACrCnE,QAAS+G,EAAYH,OAAO5G,QAC5BmB,aAAc4F,EAAYH,OAAOzC,WAAWhD,aAC5CX,QAAS,SAAC0E,EAAOzE,GAAR,OACP,EAAKkF,oBAAoBT,EAAOzE,EAAQsG,EAAY1H,UAI1D,kBAAC2H,EAAA,EAAD,CAAQ/C,KAAK,SAASgD,UAAW1E,KAAKS,MAAM0B,aAA5C,WASJ,OAHInC,KAAKS,MAAM2B,UACbkC,EAAO,kBAACK,EAAD,OAGP,6BACE,mDACCL,O,GA/HuBhE,aAqImBrB,G,qPClCpC8F,G,2MApGbtE,MAAQ,CACNuE,QAAS,GACTC,MAAO,EACPC,SAAU,EACVC,aAAc,EACd/C,SAAS,G,mFAGU,IAAD,OAClBpC,KAAKgB,SAAS,CAAEoB,SAAS,IACzBnD,EACGyE,IACC,mDAAqD1D,KAAKS,MAAMyE,UAEjEjC,MAAK,SAAA9B,GACJ8C,QAAQC,IAAI/C,EAAI/C,MAChB,IAAMgH,E,2VAAc,IAAQ,EAAK3E,MAAMuE,QAAnB,GAA+B7D,EAAI/C,MACvD,EAAK4C,SAAS,CAAEoB,SAAS,EAAO4C,QAASI,OAE1CjC,OAAM,SAAAgB,GACL,EAAKnD,SAAS,CAAEoB,SAAS,S,2CAK7B6B,QAAQC,IAAI,UAAWlE,KAAKS,MAAMuE,W,+BAe1B,IAAD,OACDK,EAAa1B,OAAOG,KAAK9D,KAAKS,MAAMuE,SAAS1G,KAAI,SAACE,EAAK8G,GAC3D,OACE,wBAAI9G,IAAKA,GACP,4BAAK8G,EAAQ,GACb,4BAAK,EAAK7E,MAAMuE,QAAQxG,GAAKiD,gBAM/B8D,EAAQ,GAENC,EAAeC,KAAKC,KAAK/B,OAAOG,KAAK9D,KAAKS,MAAMuE,SAASvC,OAAS,IACxEwB,QAAQC,IAAI,gBAAiBsB,GAC7B,IAAK,IAAIG,EAAS,EAAGA,GAAUH,EAAcG,IAC3CJ,EAAK,sBACAA,GADA,CAEH,kBAACK,EAAA,EAAWC,KAAZ,CAAiBrH,IAAKmH,EAAQG,OARrB,IAQ6BH,GACnCA,KAOP,IAAMI,EACJ,yBAAKtJ,UAAU,oDACb,kBAACmJ,EAAA,EAAD,KAAaL,IAIbjB,EACF,6BACE,kBAAC0B,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,iCACA,6CAGJ,+BAAQd,IAETU,GAQL,OAJI/F,KAAKS,MAAM2B,UACbkC,EAAO,kBAACK,EAAD,OAIP,6BACE,8CACCL,O,GA/FmBhE,aCkCb8F,OA3Bf,WACE,OACE,6BACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAD,MACA,kBAACC,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KAAK,qBACLC,UAAWC,IAEb,kBAAC,IAAD,CACEF,KAAK,uBACLC,UAAWE,IAEb,kBAAC,IAAD,CAAOH,KAAK,kBAAkBC,UAAW7B,QAI/C,kBAACgC,EAAD,S,6jBCjCR,IAAMC,GAAe,CACnBC,QAAS,GAaIC,GAVC,WAAmC,IAAlCzG,EAAiC,uDAAzBuG,GAAcG,EAAW,uCAChD,MAAoB,cAAhBA,EAAOzF,KACF,MACFjB,EADL,CAEEwG,QAASxG,EAAMwG,QAAU,IAGtBxG,GCCW2G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,WCLAC,GAAQC,YAAYR,IAE1BS,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJI,SAASC,eAAe,SD4GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhF,MAAK,SAAAiF,GACjCA,EAAaC,iB,mBElInBC,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU,uBAAuB,gBAAkB,iC,mBCA1KD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,yB,mBCA3DD,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,SAAW,6B","file":"static/js/main.b36f3573.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nconst navigation = props => {\n  return (\n    <Navbar bg=\"dark\" expand=\"lg\">\n      <Navbar.Brand className=\"text-white\" href=\"#home\">\n        Recipe Listing App\n      </Navbar.Brand>\n      <Navbar.Toggle\n        aria-controls=\"basic-navbar-nav\"\n        className=\"bg-light\"\n      ></Navbar.Toggle>\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav>\n          <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/\">\n            Home\n          </NavLink>\n          <NavLink\n            className=\"d-inline p-2 bg-dark text-white\"\n            to=\"/create-new-category\"\n          >\n            Create New Category\n          </NavLink>\n          <NavLink\n            className=\"d-inline p-2 bg-dark text-white\"\n            //href=\"/create-new-recipe\"\n            to=\"/create-new-recipe\"\n          >\n            Create New Recipe\n          </NavLink>\n          <NavLink\n            className=\"d-inline p-2 bg-dark text-white\"\n            //href=\"/recipe-listing\"\n            to=\"/recipe-listing\"\n          >\n            Recipe Listing\n          </NavLink>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default navigation;\n","import React from \"react\";\n\nconst footer = () => {\n  return (\n    <footer className=\"app-footer\">\n      <div></div>\n    </footer>\n  );\n};\n\nexport default footer;\n","import React from \"react\";\nimport classes from \"./Input.module.css\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nconst input = props => {\n  let inputElement = null;\n  const inputClasses = [classes.InputElement];\n\n  if (props.invalid && props.shouldValidation && props.touched) {\n    inputClasses.push(classes.Invalid);\n  }\n\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          className={inputClasses}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"CKEditor\":\n      inputElement = (\n        <CKEditor\n          editor={ClassicEditor}\n          className={inputClasses}\n          {...props.elementConfig}\n          data={props.value}\n          onChange={props.changed}\n          //   onChange={(event, editor) => {\n          //     const data = editor.getData();\n          //     console.log(data);\n          //   }}\n        ></CKEditor>\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          className={inputClasses}\n          value={props.value}\n          onChange={props.changed}\n        >\n          {props.elementConfig.options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputClasses}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n  }\n\n  let validationError = null;\n  if (props.invalid && props.touched) {\n    validationError = (\n      <p className={classes.ValidationError}>{props.errorMessage}</p>\n    );\n  }\n\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{props.label}</label>\n      {inputElement}\n      {validationError}\n    </div>\n  );\n};\n\nexport default input;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://recipelisting-6b405.firebaseio.com/\"\n});\n\nexport default instance;\n","import React from \"react\";\n\nimport classes from \"./Spinner.module.css\";\n\nconst spinner = () => <div className={classes.Loader}>Loading...</div>;\n\nexport default spinner;\n","const aux = (props) => props.children;\n\nexport default aux;","import React from \"react\";\n\nimport classes from \"./Backdrop.module.css\";\n\nconst backdrop = props =>\n  props.show ? (\n    <div className={classes.Backdrop} onClick={props.clicked}></div>\n  ) : null;\n\nexport default backdrop;\n","import React, { Component } from \"react\";\n\nimport classes from \"./Modal.module.css\";\nimport Aux from \"../../../hoc/Aux/Aux\";\nimport Backdrop from \"../Backdrop/Backdrop\";\n\nclass Modal extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.show !== this.props.show ||\n      nextProps.children !== this.props.children\n    );\n  }\n\n  render() {\n    return (\n      <Aux>\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n        <div\n          className={classes.Modal}\n          style={{\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\n            opacity: this.props.show ? \"1\" : \"0\"\n          }}\n        >\n          {this.props.children}\n        </div>\n      </Aux>\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\n\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport Aux from \"../Aux/Aux\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends Component {\n    state = {\n      error: null\n    };\n\n    reqInterceptor = axios.interceptors.request.use(req => {\n      this.setState({ error: null });\n      return req;\n    });\n\n    resInterceptor = axios.interceptors.response.use(\n      res => res,\n      error => {\n        this.setState({ error: error });\n      }\n    );\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqInterceptor);\n      axios.interceptors.response.eject(this.resInterceptor);\n    }\n\n    errorConfirmedHandler = () => {\n      this.setState({ error: null });\n    };\n\n    render() {\n      return (\n        <Aux>\n          <Modal\n            show={this.state.error}\n            modalClosed={this.errorConfirmedHandler}\n          >\n            {this.state.error ? this.state.error.message : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </Aux>\n      );\n    }\n  };\n};\n\nexport default withErrorHandler;\n","import React, { Component } from \"react\";\nimport Input from \"../../components/UI/Input/Input\";\nimport { Button } from \"react-bootstrap\";\nimport axios from \"../../axios/recipes/axios-recipes\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nclass CreateNewRecipe extends Component {\n  _isMount = false;\n  state = {\n    recipeForm: {\n      recipeName: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Please enter recipe name\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 200,\n          errorMessage:\n            \"Recipe name should be filled between 5 to 200 characters\"\n        },\n        valid: false,\n        touched: false\n      },\n      category: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [{ value: \"-1\", displayValue: \"Select a category\" }]\n        },\n        value: \"\",\n        validation: {},\n        valid: true\n      },\n      ingredients: {\n        elementType: \"CKEditor\",\n        elementConfig: {\n          type: \"classic\"\n          //   placeholder: \"Please enter ingredients\",\n          //   rows: 5\n        },\n        value: \"\",\n        validation: {\n          required: false\n        },\n        valid: true,\n        touched: false\n      }\n    },\n    formIsValid: false,\n    loading: false\n  };\n\n  componentDidMount() {\n    this._isMount = true;\n    axios\n      .get(\"/categories.json\")\n      .then(res => {\n        const updatedRecipeForm = Object.assign({}, this.state.recipeForm);\n        // const updatedRecipeForm = {\n        //   ...this.state.recipeForm\n        // };\n        // const fetchedCategories = [\n        //   ...updatedRecipeForm[\"category\"][\"elementConfig\"][\"options\"]\n        // ];\n        //console.log(fetchedCategories);\n\n        // for (let key in res.data) {\n        //   fetchedCategories.push({\n        //     displayValue: res.data[key].categoryName,\n        //     value: key\n        //   });\n        // }\n\n        const valueArray = Object.keys(res.data).map(key => {\n          return {\n            displayValue: res.data[key].categoryName,\n            value: key\n          };\n        });\n\n        const fetchedCategories = [\n          ...updatedRecipeForm[\"category\"][\"elementConfig\"][\"options\"],\n          ...valueArray\n        ];\n        console.log(fetchedCategories);\n\n        updatedRecipeForm[\"category\"][\"elementConfig\"][\n          \"options\"\n        ] = fetchedCategories;\n        if (this._isMount) {\n          this.setState({\n            loading: false,\n            recipeForm: updatedRecipeForm\n          });\n        }\n      })\n      .catch(err => {\n        this.setState({ loading: false });\n      });\n  }\n\n  componentWillUnmount() {\n    this._isMount = false;\n  }\n\n  checkValidity = (value, rules) => {\n    let isValid = true;\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n    return isValid;\n  };\n\n  recipeHandler = event => {\n    event.preventDefault();\n    this.setState({ loading: true });\n    const formData = {};\n\n    for (let formElementIndentifier in this.state.recipeForm) {\n      formData[formElementIndentifier] = this.state.recipeForm[\n        formElementIndentifier\n      ].value;\n    }\n\n    formData[\"createdDate\"] = new Date();\n    // const recipe = {\n    //   recipe: formData\n    // };\n\n    axios\n      .post(\"/recipes.json\", formData)\n      .then(response => {\n        this.setState({ loading: false });\n        this.props.history.push(\"/\");\n      })\n      .catch(error => {\n        this.setState({ loading: false });\n      });\n  };\n\n  inputChangedHandler = (event, editor, inputIdentifier) => {\n    const updatedRecipeForm = {\n      ...this.state.recipeForm\n    };\n    const updatedFormElement = {\n      ...updatedRecipeForm[inputIdentifier]\n    };\n    if (updatedFormElement.elementType === \"CKEditor\") {\n      updatedFormElement.value = editor.getData();\n    } else {\n      updatedFormElement.value = event.target.value;\n    }\n    updatedFormElement.valid = this.checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation\n    );\n    updatedFormElement.touched = true;\n    updatedRecipeForm[inputIdentifier] = updatedFormElement;\n    let formIsValid = true;\n    for (let inputIdentifier in updatedRecipeForm) {\n      formIsValid = updatedRecipeForm[inputIdentifier].valid && formIsValid;\n    }\n    this.setState({ recipeForm: updatedRecipeForm, formIsValid: formIsValid });\n  };\n\n  render() {\n    const formElementArray = [];\n    for (let key in this.state.recipeForm) {\n      formElementArray.push({\n        id: key,\n        config: this.state.recipeForm[key]\n      });\n    }\n    let form = (\n      <form onSubmit={this.recipeHandler}>\n        {formElementArray.map(formElement => (\n          <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            invalid={!formElement.config.valid}\n            shouldValidation={formElement.config.validation}\n            touched={formElement.config.touched}\n            errorMessage={formElement.config.validation.errorMessage}\n            changed={(event, editor) =>\n              this.inputChangedHandler(event, editor, formElement.id)\n            }\n          />\n        ))}\n        <Button type=\"submit\" disabled={!this.state.formIsValid}>\n          Submit\n        </Button>\n      </form>\n    );\n\n    if (this.state.loading) {\n      form = <Spinner />;\n    }\n    return (\n      <div>\n        <h4>Create New Recipe</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nexport default withErrorHandler(CreateNewRecipe, axios);\n","import React, { Component } from \"react\";\nimport axios from \"../../../axios/recipes/axios-recipes\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport { Button } from \"react-bootstrap\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\n\nclass CreateNewCategory extends Component {\n  state = {\n    categoryForm: {\n      categoryName: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Please enter category name\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 200,\n          errorMessage:\n            \"Category name should be filled between 5 to 200 characters\"\n        },\n        valid: false,\n        touched: false\n      }\n    },\n    formIsValid: false,\n    loading: false\n  };\n\n  checkValidity = (value, rules) => {\n    let isValid = true;\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n    return isValid;\n  };\n\n  categoryHandler = event => {\n    event.preventDefault();\n    this.setState({ loading: true });\n    const formData = {};\n\n    for (let formElementIndentifier in this.state.categoryForm) {\n      formData[formElementIndentifier] = this.state.categoryForm[\n        formElementIndentifier\n      ].value;\n    }\n    formData[\"createdDate\"] = new Date();\n    axios\n      .post(\"/categories.json\", formData)\n      .then(response => {\n        this.setState({ loading: false });\n        this.props.history.push(\"/\");\n      })\n      .catch(error => {\n        this.setState({ loading: false });\n      });\n  };\n\n  inputChangedHandler = (event, editor, inputIdentifier) => {\n    const updatedCategoryForm = {\n      ...this.state.categoryForm\n    };\n    const updatedFormElement = {\n      ...updatedCategoryForm[inputIdentifier]\n    };\n    if (updatedFormElement.elementType === \"CKEditor\") {\n      updatedFormElement.value = editor.getData();\n    } else {\n      updatedFormElement.value = event.target.value;\n    }\n    updatedFormElement.valid = this.checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation\n    );\n    updatedFormElement.touched = true;\n    updatedCategoryForm[inputIdentifier] = updatedFormElement;\n    let formIsValid = true;\n    for (let inputIdentifier in updatedCategoryForm) {\n      formIsValid = updatedCategoryForm[inputIdentifier].valid && formIsValid;\n    }\n    this.setState({\n      categoryForm: updatedCategoryForm,\n      formIsValid: formIsValid\n    });\n  };\n\n  render() {\n    const formElementArray = [];\n    for (let key in this.state.categoryForm) {\n      formElementArray.push({\n        id: key,\n        config: this.state.categoryForm[key]\n      });\n    }\n\n    let form = (\n      <form onSubmit={this.categoryHandler}>\n        {formElementArray.map(formElement => (\n          <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            invalid={!formElement.config.valid}\n            shouldValidation={formElement.config.validation}\n            touched={formElement.config.touched}\n            errorMessage={formElement.config.validation.errorMessage}\n            changed={(event, editor) =>\n              this.inputChangedHandler(event, editor, formElement.id)\n            }\n          />\n        ))}\n        <Button type=\"submit\" disabled={!this.state.formIsValid}>\n          Submit\n        </Button>\n      </form>\n    );\n\n    if (this.state.loading) {\n      form = <Spinner />;\n    }\n    return (\n      <div>\n        <h4>Create New Category</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nexport default withErrorHandler(CreateNewCategory, axios);\n","import React, { Component } from \"react\";\nimport { Table, Pagination } from \"react-bootstrap\";\nimport axios from \"../../axios/recipes/axios-recipes\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nclass RecipeListing extends Component {\n  state = {\n    recipes: {},\n    total: 0,\n    per_page: 5,\n    current_page: 1,\n    loading: false\n  };\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    axios\n      .get(\n        '/recipes.json?orderBy=\"createdDate\"&limitToLast=' + this.state.per_page\n      )\n      .then(res => {\n        console.log(res.data);\n        const updatedRecipes = { ...this.state.recipes, ...res.data };\n        this.setState({ loading: false, recipes: updatedRecipes });\n      })\n      .catch(err => {\n        this.setState({ loading: false });\n      });\n  }\n\n  componentDidUpdate() {\n    console.log(\"test123\", this.state.recipes);\n    // axios\n    //   .get(\n    //     '/recipes.json?orderBy=\"createdDate\"&endAt=\"2019-09-29T16:10:32.386Z\"&limitToLast=10'\n    //   )\n    //   .then(res => {\n    //     console.log(res.data);\n    //     const updatedRecipes = { ...this.state.recipes, ...res.data };\n    //     this.setState({ loading: false, recipes: updatedRecipes });\n    //   })\n    //   .catch(err => {\n    //     this.setState({ loading: false });\n    //   });\n  }\n\n  render() {\n    const recipeData = Object.keys(this.state.recipes).map((key, index) => {\n      return (\n        <tr key={key}>\n          <td>{index + 1}</td>\n          <td>{this.state.recipes[key].recipeName}</td>\n        </tr>\n      );\n    });\n\n    let active = 1;\n    let items = [];\n\n    const numberOfPage = Math.ceil(Object.keys(this.state.recipes).length / 10);\n    console.log(\"number page: \", numberOfPage);\n    for (let number = 1; number <= numberOfPage; number++) {\n      items = [\n        ...items,\n        <Pagination.Item key={number} active={number === active}>\n          {number}\n        </Pagination.Item>\n      ];\n    }\n\n    // this.setState({ total: numberOfPage });\n\n    const paginationBasic = (\n      <div className=\"d-flex align-items-center justify-content-center\">\n        <Pagination>{items}</Pagination>\n      </div>\n    );\n\n    let form = (\n      <div>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Recipe Name</th>\n            </tr>\n          </thead>\n          <tbody>{recipeData}</tbody>\n        </Table>\n        {paginationBasic}\n      </div>\n    );\n\n    if (this.state.loading) {\n      form = <Spinner />;\n    }\n\n    return (\n      <div>\n        <h4>Recipe Listing</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nexport default RecipeListing;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Footer from \"./components/Footer/Footer\";\n// import Category from \"./containers/Categories/Category/Category\";\n// import Categories from \"./containers/Categories/Categories\";\nimport CreateNewRecipe from \"./containers/CreateNewRecipe/CreateNewRecipe\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CreateNewCategory from \"./containers/Categories/CreateNewCategory/CreateNewCategory\";\nimport RecipeListing from \"./containers/RecipeListing/RecipeListing\";\n\nfunction App() {\n  return (\n    <div>\n      <Container>\n        <Navigation />\n        <Row>\n          {/* <Col xs={0} md={3}></Col> */}\n          <Col xs={12} md={12}>\n            <Switch>\n              <Route\n                path=\"/create-new-recipe\"\n                component={CreateNewRecipe}\n              ></Route>\n              <Route\n                path=\"/create-new-category\"\n                component={CreateNewCategory}\n              ></Route>\n              <Route path=\"/recipe-listing\" component={RecipeListing}></Route>\n            </Switch>\n          </Col>\n        </Row>\n        <Footer></Footer>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n  counter: 0\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === \"INCREMENT\") {\n    return {\n      ...state,\n      counter: state.counter + 1\n    };\n  }\n  return state;\n};\n\nexport default reducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reducer from \"./store/reducer\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\",\"ValidationError\":\"Input_ValidationError__qMR97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load2\":\"Spinner_load2__2gkgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};"],"sourceRoot":""}